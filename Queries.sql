--Query #1 WORKS ching 
SELECT EMPLOYEE.EMPLOYEE_ID AS ID,EMPLOYEE.LAST_NAME AS SURNAME,EMPLOYEE.FIRST_NAME AS NAME, COUNT(*) AS WEEKLY FROM EMPLOYEE
JOIN ENTRY ON EMPLOYEE.EMPLOYEE_ID = ENTRY.EMPLOYEE_ID
JOIN TICKET ON TICKET.TICKET_ID = ENTRY.TICKET_ID
WHERE TICKET.END_DATE >=  dateadd(wk, datediff(wk, 0, getdate()) - 1, 0)  --first day of last week
and TICKET.END_DATE < dateadd(wk, datediff(wk, 0, getdate()), 0) --first day of this week 
GROUP BY EMPLOYEE.EMPLOYEE_ID, EMPLOYEE.LAST_NAME, EMPLOYEE.FIRST_NAME


--Query #2 WORKS ching 
SELECT COUNT(*) AS # FROM 
(SELECT TICKET.TICKET_ID,EMPLOYEE.LAST_NAME,COUNT(*) AS NUMBER FROM ACTIVITY
INNER JOIN ENTRY ON ACTIVITY.ACTIVITY_ID = ENTRY.ACTIVITY_ID
INNER JOIN EMPLOYEE ON ENTRY.EMPLOYEE_ID = EMPLOYEE.EMPLOYEE_ID
INNER JOIN TICKET ON ENTRY.TICKET_ID = TICKET.TICKET_ID
--WHERE ENTRY.ACTIVITY_ID = 'RGSTR' --added this line since we are checking for tickets that an employe worked >=3 times but couldn't resolve
GROUP BY TICKET.TICKET_ID,EMPLOYEE.LAST_NAME
HAVING COUNT(ENTRY.ACTIVITY_ID) >= 3) c


--Query #3 WORKS ching
SELECT DEPARTMENT.DEPARTMENT_ID,DEPARTMENT.DEPARTMENT_NAME , MAX(tmp.cnt) # FROM DEPARTMENT
JOIN
(
	SELECT TICKET.TICKET_ID, DEPARTMENT.DEPARTMENT_ID, COUNT(ENTRY.ENTRY_ID) cnt FROM TICKET
	JOIN ENTRY ON ENTRY.TICKET_ID = TICKET.TICKET_ID
	JOIN EMPLOYEE ON EMPLOYEE.EMPLOYEE_ID = ENTRY.EMPLOYEE_ID
	JOIN DEPARTMENT ON DEPARTMENT.DEPARTMENT_ID = EMPLOYEE.DEPARTMENT_ID
	WHERE EMPLOYEE.DEPARTMENT_ID = DEPARTMENT.DEPARTMENT_ID
	GROUP BY TICKET.TICKET_ID, DEPARTMENT.DEPARTMENT_ID)tmp ON DEPARTMENT.DEPARTMENT_ID = tmp.DEPARTMENT_ID
	GROUP BY DEPARTMENT.DEPARTMENT_ID,DEPARTMENT.DEPARTMENT_NAME




--Query #4 WORKS ching
SELECT 
	EMPLOYEE.EMPLOYEE_ID,
	EMPLOYEE.LAST_NAME,
	EMPLOYEE.FIRST_NAME
	FROM EMPLOYEE
JOIN ENTRY ON ENTRY.EMPLOYEE_ID = EMPLOYEE.EMPLOYEE_ID
GROUP BY EMPLOYEE.EMPLOYEE_ID,	EMPLOYEE.LAST_NAME,
	EMPLOYEE.FIRST_NAME
HAVING COUNT(ENTRY.ENTRY_ID) >= 
(SELECT CAST(1.25 * COUNT(ENTRY.ACTIVITY_ID)/COUNT(DISTINCT EMPLOYEE.EMPLOYEE_ID)AS float) 
												FROM EMPLOYEE JOIN ENTRY ON EMPLOYEE.EMPLOYEE_ID = ENTRY.EMPLOYEE_ID
												WHERE ENTRY.ACTIVITY_ID = 'ADVTS' AND EMPLOYEE.DEPARTMENT_ID = 'SLS') 


--Query #5 WORKS ching
SELECT TOP 3 
		*
FROM 
( SELECT 
	TICKET.TICKET_ID,
	TICKET.START_DATE
  FROM 
	TICKET 
JOIN ENTRY ON ENTRY.TICKET_ID = TICKET.TICKET_ID
WHERE TICKET.STATUS_ID != 'CLSD'
GROUP BY TICKET.TICKET_ID, TICKET.START_DATE
HAVING COUNT(ENTRY.ENTRY_ID) >= 2

)c ORDER BY c.START_DATE ASC





